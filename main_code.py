# -*- coding: utf-8 -*-
import time

if __name__ == '__main__':
    import telebot
    from config import API


    class Master:
        _instance = None

        def __init__(self):
            self.dictionary = {}

        @classmethod
        def get_instance(cls):
            if not cls._instance:
                cls._instance = Master()
            return cls._instance


    bot = telebot.TeleBot(API)
    chapter_controller = Master.get_instance()


    @bot.message_handler(commands=['start'])
    def start_message(message):
        bot.send_message(message.from_user.id,
                         '''Привествую вас в виртуальной симуляции "Hartswood". Далее я буду обращаться к вам от имени Системы, а ваши реплики будут обозначены меткой игрока "И". Начнем игру.''')
        user_id = message.from_user.id
        chapter_controller.dictionary[user_id] = 'chapter1Acquaintance'
        start(message)


    @bot.message_handler(content_types='voice')
    def voice_defend(message):
        bot.send_message(message.from_user.id, '''Ты точно коренной англичанин?\nСовершенно не могу понять, что ты говоришь.''')


    @bot.message_handler(content_types='sticker')
    def sticker_defend(message):
        bot.send_message(message.from_user.id, '''Джон, что это за идиотские картинки?''')


    @bot.message_handler(content_types='text')
    def start(message):
        user_id = message.from_user.id
        user_chapter = chapter_controller.dictionary.get(user_id, 'start')

        if user_chapter == 'chapter1Acquaintance':
            play = acquaintance(message)
        elif user_chapter == 'chapter2Assasination':
            play = assasination(message)
        elif user_chapter == 'chapter3Killer':
            play = killer(message)
        #elif user_chapter == 'chapter4TheEnd':
           # play =


    def acquaintance(message):

        user_choice = message.text
        if user_choice == '1':
            bot.send_message(message.from_user.id, "Ш: Ну и что?\n Д: Шерлок, ты слишком громкий. Прошу извинить моего друга, он всегда так говорит, когда взволнован. Надеюсь, мы вам не сильно помешали?\n И: Нет, однако, со стороны звучит так, будто вы обсуждаете преступление.\n Ш: Так и есть, поучавствуете? Джон совершенно не понимает очевидных вещей.\n И: С удовольствием, с детства увлекаюсь криминалистикой.")
            bot.send_message(message.from_user.id, "Ш: Итак, мы расследуем убийство лорда Джейна, одного из высокопоставленных лиц в Палате лордов. Его тело нашла горничная в ванной его собственного дома. Был одет в итальянский костюм темно-синего цвета, обшлага рукавов, как я уже и сказал, были влажными. На теле найдены следы множественных порезов, некоторые глубокие, и след от удара тяжелым тупым предметом по голове. Был убит около 7 часов вечера. \n Д: С вашей точки зрения, как был убит лорд? \n[1] Его изрезали ножом, и из-за порезов он потерял много крови \n [2] Лорд Джейн застрелился по неизвестным причинам \n [3] Его ударили тяжелым тупым предметом, предположительно, со спины")
            chapter_controller.dictionary[message.from_user.id] = 'chapter2Assasination'
        elif user_choice == '2':
            bot.send_message(message.from_user.id, "Вы подходите к их столику и Шерлок рассказывает вам историю.")
            bot.send_message(message.from_user.id, "Ш: Итак, мы расследуем убийство лорда Джейна, одного из высокопоставленных лиц в Палате лордов. Его тело нашла горничная в ванной его собственного дома. Был одет в итальянский костюм темно-синего цвета, обшлага рукавов, как я уже и сказал, были влажными. На теле найдены следы множественных порезов, некоторые глубокие, и след от удара тяжелым тупым предметом по голове. Был убит около 7 часов вечера. \n Д: С вашей точки зрения, как был убит лорд? \n[1] Его изрезали ножом, и из-за порезов он потерял много крови \n [2] Лорд Джейн застрелился по неизвестным причинам \n [3] Его ударили тяжелым тупым предметом, предположительно, со спины")
            chapter_controller.dictionary[message.from_user.id] = 'chapter2Assasination'
        else:
            bot.send_message(message.from_user.id, "Вы, как и в любое другое утро, сидите в одиночестве в любимой кофейне, пьете прекрасно сваренный капучино и читаете новости. Отвлекшись от телефона, вы замечаете странную команду из двух мужчин через два столика от вас, оживленно обсуждающих что-то между собой. “Нет, Джон, такого точно не может быть, обшлага рукавов его пиджака были влажными, значит удар был нанесен со спины! Думай, Джон, думай!” - вы невольно подслушали вскрик одного из них. Вы заинтересовались и продолжаете наблюдать за ними. Какая странная пара - один с тростью, короткой прической, обычными чертами лица, среднего роста, выглядит спокойным. Второй высокий, с темными, слегка кудрявыми волосами, явно чем-то взволнованный.\n -Шерлок, кажется, за нами наблюдают…")
            time.sleep(3)
            bot.send_message(message.from_user.id, "Система: Ваши действия?\n[1] Сделать вид что вы ничего не слышали\n[2] Подойти и спросить")


    def assasination(message):
        user_choice = message.text
        user_id = message.from_user.id
        if user_choice == '1' or user_choice == '2':
            bot.send_message(user_id, "Ш: Ну нет, вы меня разочаровываете. Я же сказал, обшлага рукавов были влажными, значит его ударили чем-то по затылку, чем вызвали почти мгновенную смерть.\nД: А порезы?\nШ: Джон, даже я в курсе. Покойный лорд занимался фехтованием на саблях, недавно проходили соревнования по опасному сабельному фехтованию, где лорд Патрик Джейн учавствовал вне конкурса. Именно там его так изрезали. Между прочим, отлично себя показал. Сейчас вы будете решать, кто же наглый убийца")
        elif user_choice == '3':
            bot.send_message(user_id, "Ш: Вы очень наблюдательны! Перейдем к поиску убийцы.")

        bot.send_message(user_id, "Ш: Итак, лорд Патрик был убит тяжелым предметом. Лестрейд передал мне данные экспертизы, удар нанесли молотком, лорд скончался буквально через несклько секунд после удара.\nД: Но ведь молоток мог принести кто угодно?\nШ: В обычной ситуации да, но я добыл записи с камеры на входе в дом! В этот день в дом входили трое, кроме самого лорда:\nСадовник Кимбэлл Чо, согласно его показаниям, он потратил три часа на рутинную уборку сада, после чего ушел. В дом он заходил дабы сложить инструмент, это обычная практика;\n\nШофер Грейс Ригсби, сегодня она приехала, чтобы отвезти лорда решать свои лордские дела, однако покойный отправил ее домой, как сказала шофер - лорд не планировал никаких выездов сегодня;\n\nРабочий Уэйн Ван Пелт, в ближайшие дни он должен был заканчивать ремонт на верхних этажах дома. Из дома он ушел как раз под вечер, однако не помнит точное время.")
        time.sleep(9)
        bot.send_message(user_id, "Ш: Я дал вам информацию по трем подозреваемым. Ваша задача - указать, кто же убил Патрика.\n[1] Садовник Кимбэлл Чо\n[2] Шофер Грейс Ригсби\n[3] Рабочий Уэйн Ван Пелт\n Система: Внимание, ваш выбор влияет на результат игры. Будьте внимательны!")
        chapter_controller.dictionary[user_id] = 'chapter3Killer'

    def killer(message):
        user_choice = message.text
        user_id = message.from_user.id
        if user_choice == 1:
            bot.send_message(user_id, "Ш: Неправильно! У садовника не было мотива убивать лорда - его работа не занимала много времени, однако, платили ему как высококфалифицированному профессионалу. Тогда кто же все-таки убийца?")
        elif user_choice == 2:
            bot.send_message(user_id, "Д: Я думаю, если бы шофер хотел убить столь высопоставленное лицо, ему было бы проще имитировать серьезную аварию.\nШ:А вот и нет! Лорд ведь может и выжить, думаю, тогда шофера поймали бы очень быстро. Так что Грейс ни при чем. Кто же это может быть?")
        elif user_choice == 3:
            bot.send_message(user_id, "Ш: Вы абсолютно правы! Лорда убил именно Уэйн. Я узнал у жены лорда, Патрик как-то раз упомянул, что не собирается платить за ремонт полную цену, его не устроило качество. Видимо, рабочий подслушал это разговор и серьезно поругался с лордом. Печальная ситуация.")
            chapter_controller.dictionary[user_id] = 'chapter4TheEnd'
    bot.polling()
